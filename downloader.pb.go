// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0-devel
// 	protoc        v3.12.0
// source: downloader.proto

package main

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type DownloadFileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	URL string `protobuf:"bytes,1,opt,name=URL,proto3" json:"URL,omitempty"`
}

func (x *DownloadFileReq) Reset() {
	*x = DownloadFileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_downloader_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadFileReq) ProtoMessage() {}

func (x *DownloadFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_downloader_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadFileReq.ProtoReflect.Descriptor instead.
func (*DownloadFileReq) Descriptor() ([]byte, []int) {
	return file_downloader_proto_rawDescGZIP(), []int{0}
}

func (x *DownloadFileReq) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

type DownloadFileResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Msg:
	//	*DownloadFileResp_Header
	//	*DownloadFileResp_Chunk
	Msg isDownloadFileResp_Msg `protobuf_oneof:"Msg"`
}

func (x *DownloadFileResp) Reset() {
	*x = DownloadFileResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_downloader_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadFileResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadFileResp) ProtoMessage() {}

func (x *DownloadFileResp) ProtoReflect() protoreflect.Message {
	mi := &file_downloader_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadFileResp.ProtoReflect.Descriptor instead.
func (*DownloadFileResp) Descriptor() ([]byte, []int) {
	return file_downloader_proto_rawDescGZIP(), []int{1}
}

func (m *DownloadFileResp) GetMsg() isDownloadFileResp_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (x *DownloadFileResp) GetHeader() *DownloadFileHeader {
	if x, ok := x.GetMsg().(*DownloadFileResp_Header); ok {
		return x.Header
	}
	return nil
}

func (x *DownloadFileResp) GetChunk() *DownloadFileChunk {
	if x, ok := x.GetMsg().(*DownloadFileResp_Chunk); ok {
		return x.Chunk
	}
	return nil
}

type isDownloadFileResp_Msg interface {
	isDownloadFileResp_Msg()
}

type DownloadFileResp_Header struct {
	Header *DownloadFileHeader `protobuf:"bytes,1,opt,name=Header,proto3,oneof"`
}

type DownloadFileResp_Chunk struct {
	Chunk *DownloadFileChunk `protobuf:"bytes,2,opt,name=Chunk,proto3,oneof"`
}

func (*DownloadFileResp_Header) isDownloadFileResp_Msg() {}

func (*DownloadFileResp_Chunk) isDownloadFileResp_Msg() {}

type DownloadFileHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size int64  `protobuf:"varint,1,opt,name=Size,proto3" json:"Size,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *DownloadFileHeader) Reset() {
	*x = DownloadFileHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_downloader_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadFileHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadFileHeader) ProtoMessage() {}

func (x *DownloadFileHeader) ProtoReflect() protoreflect.Message {
	mi := &file_downloader_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadFileHeader.ProtoReflect.Descriptor instead.
func (*DownloadFileHeader) Descriptor() ([]byte, []int) {
	return file_downloader_proto_rawDescGZIP(), []int{2}
}

func (x *DownloadFileHeader) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *DownloadFileHeader) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DownloadFileChunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chunk []byte `protobuf:"bytes,1,opt,name=Chunk,proto3" json:"Chunk,omitempty"`
}

func (x *DownloadFileChunk) Reset() {
	*x = DownloadFileChunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_downloader_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadFileChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadFileChunk) ProtoMessage() {}

func (x *DownloadFileChunk) ProtoReflect() protoreflect.Message {
	mi := &file_downloader_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadFileChunk.ProtoReflect.Descriptor instead.
func (*DownloadFileChunk) Descriptor() ([]byte, []int) {
	return file_downloader_proto_rawDescGZIP(), []int{3}
}

func (x *DownloadFileChunk) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

var File_downloader_proto protoreflect.FileDescriptor

var file_downloader_proto_rawDesc = []byte{
	0x0a, 0x10, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x22, 0x23,
	0x0a, 0x0f, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x55, 0x52, 0x4c, 0x22, 0x8a, 0x01, 0x0a, 0x10, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x64, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69,
	0x6c, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x48, 0x00, 0x52, 0x06, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x35, 0x0a, 0x05, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b,
	0x48, 0x00, 0x52, 0x05, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x42, 0x05, 0x0a, 0x03, 0x4d, 0x73, 0x67,
	0x22, 0x3c, 0x0a, 0x12, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x29,
	0x0a, 0x11, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x68,
	0x75, 0x6e, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x32, 0x62, 0x0a, 0x11, 0x44, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4d,
	0x0a, 0x0c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1b,
	0x2e, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x64, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x30, 0x01, 0x42, 0x08, 0x5a,
	0x06, 0x2e, 0x3b, 0x6d, 0x61, 0x69, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_downloader_proto_rawDescOnce sync.Once
	file_downloader_proto_rawDescData = file_downloader_proto_rawDesc
)

func file_downloader_proto_rawDescGZIP() []byte {
	file_downloader_proto_rawDescOnce.Do(func() {
		file_downloader_proto_rawDescData = protoimpl.X.CompressGZIP(file_downloader_proto_rawDescData)
	})
	return file_downloader_proto_rawDescData
}

var file_downloader_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_downloader_proto_goTypes = []interface{}{
	(*DownloadFileReq)(nil),    // 0: downloader.DownloadFileReq
	(*DownloadFileResp)(nil),   // 1: downloader.DownloadFileResp
	(*DownloadFileHeader)(nil), // 2: downloader.DownloadFileHeader
	(*DownloadFileChunk)(nil),  // 3: downloader.DownloadFileChunk
}
var file_downloader_proto_depIdxs = []int32{
	2, // 0: downloader.DownloadFileResp.Header:type_name -> downloader.DownloadFileHeader
	3, // 1: downloader.DownloadFileResp.Chunk:type_name -> downloader.DownloadFileChunk
	0, // 2: downloader.DownloaderService.DownloadFile:input_type -> downloader.DownloadFileReq
	1, // 3: downloader.DownloaderService.DownloadFile:output_type -> downloader.DownloadFileResp
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_downloader_proto_init() }
func file_downloader_proto_init() {
	if File_downloader_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_downloader_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadFileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_downloader_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadFileResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_downloader_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadFileHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_downloader_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadFileChunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_downloader_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*DownloadFileResp_Header)(nil),
		(*DownloadFileResp_Chunk)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_downloader_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_downloader_proto_goTypes,
		DependencyIndexes: file_downloader_proto_depIdxs,
		MessageInfos:      file_downloader_proto_msgTypes,
	}.Build()
	File_downloader_proto = out.File
	file_downloader_proto_rawDesc = nil
	file_downloader_proto_goTypes = nil
	file_downloader_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DownloaderServiceClient is the client API for DownloaderService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DownloaderServiceClient interface {
	DownloadFile(ctx context.Context, in *DownloadFileReq, opts ...grpc.CallOption) (DownloaderService_DownloadFileClient, error)
}

type downloaderServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDownloaderServiceClient(cc grpc.ClientConnInterface) DownloaderServiceClient {
	return &downloaderServiceClient{cc}
}

func (c *downloaderServiceClient) DownloadFile(ctx context.Context, in *DownloadFileReq, opts ...grpc.CallOption) (DownloaderService_DownloadFileClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DownloaderService_serviceDesc.Streams[0], "/downloader.DownloaderService/DownloadFile", opts...)
	if err != nil {
		return nil, err
	}
	x := &downloaderServiceDownloadFileClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DownloaderService_DownloadFileClient interface {
	Recv() (*DownloadFileResp, error)
	grpc.ClientStream
}

type downloaderServiceDownloadFileClient struct {
	grpc.ClientStream
}

func (x *downloaderServiceDownloadFileClient) Recv() (*DownloadFileResp, error) {
	m := new(DownloadFileResp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// DownloaderServiceServer is the server API for DownloaderService service.
type DownloaderServiceServer interface {
	DownloadFile(*DownloadFileReq, DownloaderService_DownloadFileServer) error
}

// UnimplementedDownloaderServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDownloaderServiceServer struct {
}

func (*UnimplementedDownloaderServiceServer) DownloadFile(*DownloadFileReq, DownloaderService_DownloadFileServer) error {
	return status.Errorf(codes.Unimplemented, "method DownloadFile not implemented")
}

func RegisterDownloaderServiceServer(s *grpc.Server, srv DownloaderServiceServer) {
	s.RegisterService(&_DownloaderService_serviceDesc, srv)
}

func _DownloaderService_DownloadFile_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DownloadFileReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DownloaderServiceServer).DownloadFile(m, &downloaderServiceDownloadFileServer{stream})
}

type DownloaderService_DownloadFileServer interface {
	Send(*DownloadFileResp) error
	grpc.ServerStream
}

type downloaderServiceDownloadFileServer struct {
	grpc.ServerStream
}

func (x *downloaderServiceDownloadFileServer) Send(m *DownloadFileResp) error {
	return x.ServerStream.SendMsg(m)
}

var _DownloaderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "downloader.DownloaderService",
	HandlerType: (*DownloaderServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "DownloadFile",
			Handler:       _DownloaderService_DownloadFile_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "downloader.proto",
}
